apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'artifactory'

version = '1.6.0-SNAPSHOT'
group   = 'com.exactprosystems.testtools'

sourceCompatibility = 1.7 //Java version compatibility to use when compiling Java source.
targetCompatibility = 1.7 //Java version to generate classes for.

buildscript {
    repositories {
        maven { url 'http://arti.exactpro.com/libs-release' }
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '2.2.+')
    }
}

ext.sharedDir = file('../../shared')

repositories {
    maven {
        name 'MavenLocal' // for local builds only
        url sharedDir
    }
    maven {
        name 'Artifactory'
        url 'http://arti.exactpro.com/libs-snapshot'
    }
}

// Set defaults
if (!project.hasProperty("revision")) {
    ext.revision = "local_build" // mark local builds
}
if (!project.hasProperty("build_number")) {
    ext.build_number = "local_build" // mark local builds
}
if (!project.hasProperty("release")) {
    ext.release = "default"
}
ext {
    decimal = false
    dictDir = file("dicts/${release}")
}

archivesBaseName = "quickfixj-${release}"

// Change default project layout
sourceSets {
    main {
        java {
            srcDir 'src/gen/java'
        }
        resources {
            srcDir "${dictDir}"
        }
    }
}

configurations {
    codegen
    all {transitive = false}
    all {resolutionStrategy.cacheChangingModulesFor 0, 'seconds' } // don't cache SNAPSHOTs
}

dependencies {
    compile 'org.hsqldb:hsqldb:2.3.2'
    compile 'org.slf4j:slf4j-api:1.7.2'
    compile 'org.slf4j:slf4j-log4j12:1.7.2'
    compile 'log4j:log4j:1.2.17'
    compile 'com.exactprosystems.testtools:apache-mina-core:2.0.9-SNAPSHOT'
    compile 'com.cloudhopper.proxool:proxool:0.9.1'
    compile 'org.apache.avalon.framework:avalon-framework-api:4.3.1'
    compile 'org.slf4j:jcl-over-slf4j:1.7.12'
    compile 'berkeleydb:je:2.1.30'
    testCompile 'junit:junit:4.7'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.hamcrest:hamcrest-all:1.3'


    codegen 'com.exactprosystems.testtools:quickfixj-code-generator:1.6.0-SNAPSHOT'
}

jar {
    //classifier = "${release}"
    manifest {
	attributes('Implementation-Version': "${revision}")
        attributes("FIX-Project": "${release}")
        attributes('Build_Number': "${build_number}")
    }
}

task generateMessage {
    doLast {
        println "###############################################"
        println "Currency will be treated as BigDecimal = ${decimal}"
        println "###############################################"

        javaexec {
            classpath sourceSets.main.runtimeClasspath + configurations.codegen
            main 'org.quickfixj.codegenerator.MessageCodeGenerator'
            args = ["${dictDir}", './', 'src/gen/java']
            jvmArgs = ["-Dgenerator.decimal=${decimal}"]
        }
    }
}

compileJava.dependsOn.add('generateMessage')

uploadArchives {
    repositories.mavenDeployer {
        uniqueVersion = false // publish non unique snapshots to local repository
        repository(url: "file://${sharedDir}")
    }
    doFirst { sharedDir.mkdirs() }
}

clean {
    delete 'src/gen'
}

task zipDicts(type: Zip) {
    classifier = 'dicts'
    from ('dicts')
}

artifacts {
    archives(zipDicts)
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

test.enabled = false
compileTestJava.enabled = false